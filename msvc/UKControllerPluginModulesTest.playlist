<Playlist Version="1.0"><Add Test="BrusselsAirfieldGroup.HasAirfieldReturnsFalseNotInBrussels" /><Add Test="Countdown.GetCurrentTimeStringReturnsCorrectZeroValue" /><Add Test="Countdown.GetCurrentTimeStringReturnsCorrectValueWithMinutesSecondsLessThanTen" /><Add Test="Countdown.ResetTimerPlaysSoundIfRequested" /><Add Test="Countdown.GetCurrentTimeStringReturnsCorrectValueNoMinutesSecondsLessThanTen" /><Add Test="Countdown.GetCurrentTimeStringReturnsCorrectValueNoMinutesSecondsGreaterThanTen" /><Add Test="AmsterdamAirfieldGroup.HasAirfieldReturnsMainCodeIfNotViaKoksy" /><Add Test="AmsterdamAirfieldGroup.HasAirfieldReturnsSecondaryCodeIfViaKoksy" /><Add Test="AmsterdamAirfieldGroup.HasAirfieldReturnsFalseNotInAmsterdam" /><Add Test="BrusselsAirfieldGroup.HasAirfieldReturnsFalseIfKnownNotViaKoksy" /><Add Test="BrusselsAirfieldGroup.HasAirfieldReturnsFalseNotKnownInBrussels" /><Add Test="Countdown.GetCurrentTimeStringReturnsCorrectValueWithMinutesSecondsGreaterThanTen" /><Add Test="Countdown.ResetTimerSetsEndTimeToNull" /><Add Test="BrusselsAirfieldGroup.HasAirfieldReturnsTrueIfKnownViaKoksy" /><Add Test="AmsterdamAirfieldGroup.HasAirfieldReturnsFalseNotKnownInAmsterdam" /><Add Test="AmsterdamAirfieldGroup.HasAirfieldReturnsTrueIfAirfieldKnown" /><Add Test="DublinAirfieldGroup.HasAirfieldReturnsFalseNotKnownInDublin" /><Add Test="DublinAirfieldGroup.HasAirfieldReturnsTrueIfKnownInDublin" /><Add Test="DublinAirfieldGroup.HasAirfieldReturnsFalseNotInDublin" /><Add Test="HomeAirfieldGroup.GetIntentionCodeForGroupReturnsLastTwoLettersOfIcaoWhenMalformed" /><Add Test="HistoryTrail.AddItemTrailRemovesLastItemIfFull" /><Add Test="HistoryTrail.AddItemAddsItemIfQueueNotFull" /><Add Test="HistoryTrail.AddItemAddsItemIfQueueNotFullBoundary" /><Add Test="HistoryTrail.AddItemTrailItemsMaintainOrder" /><Add Test="HistoryTrail.AddItemAddsItemQueueEmpty" /><Add Test="HomeAirfieldGroup.HasAirfieldReturnsFalseNotInHome" /><Add Test="HomeAirfieldGroup.GetIntentionCodeForGroupReturnsLastTwoLettersOfIcao" /><Add Test="HomeAirfieldGroup.HasAirfieldReturnsTrueIfKnownInHome" /><Add Test="InitialAltitudeGenerator.GetInitialAltitudeForDepartureReturnsInitialIfKnown" /><Add Test="IntentionCodeFixture.GetIntentionCodeReturnsSameCodeIfCacheNotInvalidated" /><Add Test="IntentionCodeFixture.GetIntentionCodeGetsNewCodeIfCacheInvalidated" /><Add Test="IntentionCodeFixture.ReturnsDestinationIcaoNoMatch" /><Add Test="InitialAltitudeGenerator.HasSidReturnsFalseIfSidNotKnown" /><Add Test="InitialAltitudeGeneratorFactory.CreateProcessesMultipleAirfields" /><Add Test="IntentionCodeFixture.GetIntentionCodeCacheDoesNotSelfInvalidateNoExitPoint" /><Add Test="InitialAltitudeGenerator.HasSidReturnsFalseIfAirfieldNotKnown" /><Add Test="IntentionCodeFixture.GetIntentionCodeForFlightPlanIgnoresFixIfTravellingInWrongDirection" /><Add Test="InitialAltitudeGeneratorFactory.CreateIgnoresInvalidJson" /><Add Test="IntentionCodeFixture.GetIntentionCodeCacheSelfInvalidatesIfPointPassed" /><Add Test="IntentionCodeFixture.GetIntentionCodeCacheDoesNotSelfInvalidateIfDirectPastPointAndNotClose" /><Add Test="InitialAltitudeGenerator.GetInitialAltitudeForDepartureReturnsZeroIfAirfieldNotKnown" /><Add Test="IntentionCodeFixture.ReturnsCorrectCodeNoFlightplan" /><Add Test="IntentionCodeFixture.ReturnsCorrectCodeNormalCase" /><Add Test="InitialAltitudeGenerator.GetInitialAltitudeForDepartureReturnsZeroIfSidNotKnown" /><Add Test="InitialAltitudeGeneratorFactory.CreateIgnoresNonIntegerInitialAltitudes" /><Add Test="InitialAltitudeGeneratorFactory.CreateIncludesIntegerInitialAltitudes" /><Add Test="IntentionCodeFixture.ReturnsCorrectCodeFromAirfieldGroup" /><Add Test="IntentionCodeFixture.GetIntentionCodeCacheDoesNotSelfInvalidateIfPointNotPassed" /><Add Test="InitialAltitudeGenerator.HasSidReturnsTrueIfSidKnown" /><Add Test="IntentionCodeFixture.GetIntentionCodeCacheSelfInvalidatesIfDirectPastPointAndCloserToNext" /><Add Test="MinStack.HasTerminalControlAreaReturnsTrueIfTerminalControlAreaKnown" /><Add Test="MinStack.NewMetarProcessMetarDoesNothingIfMetarEmptyString" /><Add Test="MinStack.NewMetarProcessMetarCallsSetMinStackIfMetarValid" /><Add Test="MinStack.NewMetarGetTerminalControlAreaForAirfieldDoesNothingIfTmaNotKnown" /><Add Test="MinStack.IsConcernedAirfieldReturnsFalseIfAirfieldNotConcerned" /><Add Test="MinStack.IsConcernedAirfieldReturnsTrueIfAirfieldConcerned" /><Add Test="MinStack.NewMetarProcessMetarDoesNothingIfMetarInvalid" /><Add Test="MinStack.GetAllTmasReturnsCorrectData" /><Add Test="MinStack.HasTerminalControlAreaReturnsFalseIfTerminalControlAreaNotKnown" /><Add Test="MinStack.MinStackClickedDoesNothingIfTmaNotKnown" /><Add Test="MinStack.MinStackClickedAcknowledgesTheMinStackOfTheGivenTma" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueWest" /><Add Test="SectorExitRepository.ConstructorInitialisesSectorExitPoints" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseSouthWestTooFarNorth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseSouthTooFarWest" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectDefaultCodeVeuleIfRouteNull" /><Add Test="SectorExitPointEtrat.GetIntentionCodeReturnsCorrectSecondaryCode" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueNorthBoundaryWest" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseNorthTooFarEast" /><Add Test="SectorExitRepository.HasSectorExitPointReturnsTrueIfPointExists" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouthBoundaryWest" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseSouthWestTooFarSouth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueWestBoundaryNorth" /><Add Test="ShannonAirfieldGroup.HasAirfieldReturnsTrueIfAirfieldKnownShannon" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouthWestBoundaryNorth" /><Add Test="SectorExitPointLelna.GetIntentionCodeReturnsCorrectDefaultCodeLelnaIfRouteNull" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouthEast" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseSouthEastTooFarNorth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseWestTooFarNorth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueWestBoundarySouth" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectSecondaryCodeOdebuLowBoundary" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectSecondaryCodeOdebuHighBoundary" /><Add Test="SectorExitPointLelna.GetIntentionCodeReturnsCorrectSecondaryCodeDinard" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseEastTooFarSouth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueEast" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectSecondaryCodeOdebuHigh" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseEastTooFarEast" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectSecondaryCodeOdebuLow" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseNorthTooFarWest" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouthBoundaryEast" /><Add Test="SectorExitPointEtrat.GetIntentionCodeReturnsCorrectSecondaryBoundary" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectSecondaryCodeTepri" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueNorth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueEastBoundaryNorth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouthWestBoundarySouth" /><Add Test="SectorExitPointLelna.GetIntentionCodeReturnsCorrectDefaultCodeLelna" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouthWest" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseWestTooFarSouth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseSouthEastTooFarSouth" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectSecondaryCodePekim" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouthEastBoundaryNorth" /><Add Test="SectorExitPointLelna.GetIntentionCodeReturnsCorrectSecondaryCodeDomok" /><Add Test="SectorExitPointEtrat.GetIntentionCodeReturnsCorrectPrimaryCode" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsFalseEastTooFarNorth" /><Add Test="ShannonAirfieldGroup.HasAirfieldReturnsFalseNotShannon" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectDefaultCodeVeule" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectSecondaryCodeKotap" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouthEastBoundarySouth" /><Add Test="SectorExitPointLelna.GetIntentionCodeReturnsCorrectSecondaryCodeArree" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueSouth" /><Add Test="SectorExitPointEtrat.GetIntentionCodeReturnsCorrectPrimaryCodeBoundary" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueEastBoundarySouth" /><Add Test="SectorExitPoint.IsCorrectOutDirectionReturnsTrueNorthBoundaryEast" /><Add Test="SectorExitPointVeule.GetIntentionCodeReturnsCorrectSecondaryCodeDekod" /></Playlist>